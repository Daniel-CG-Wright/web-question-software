import { OutputData } from "@/types";
import StandardToggles from "@/components/StandardToggles";
interface Props {
    numQuestions: number;
    totalMarks: number;
    displayAsImages: boolean;
    setDisplayAsImages: (displayAsImages: boolean) => void;
    displayMarkscheme: boolean;
    setDisplayMarkscheme: (displayMarkscheme: boolean) => void;
}

/**
 * the header information for the exam paper generated by the exam generator
 *  This includes the number of questions and the total paper marks, and the ability to switch between the exam paper and the markscheme
 * and between images and text
 * For the below todo's, we will need to add a dropdown to donwload the exam paper in the desired format.
 * @todo add a button to copy the exam paper to the clipboard
 * @todo add a button to download the exam paper as a pdf
 * @todo add a button to download the exam paper as a word document
 * @todo add a button to download the exam paper as a latex document
 * @todo add a button to download the exam paper as a markdown document
 * @todo add a button to download the exam paper as a text document
 * */
const ExamPaperHeader: React.FC<Props> = ({ numQuestions, totalMarks, displayAsImages, setDisplayAsImages, displayMarkscheme, setDisplayMarkscheme }) => {
    return (
        <div className="flex flex-col md:flex-row justify-between items-center">
            <p>A paper will be generated with marks between the min marks and max marks</p>
            <div className="flex flex-row space-x-4">
                <p className="text-2xl font-bold">
                    {numQuestions} Questions
                </p>
                <p className="text-2xl font-bold">
                    {totalMarks} Marks
                </p>
            </div>
            <StandardToggles 
            displayAsImages={displayAsImages}
            setDisplayAsImages={setDisplayAsImages}
            displayMarkscheme={displayMarkscheme}
            setDisplayMarkscheme={setDisplayMarkscheme}
            />
        </div>

    );
}

export default ExamPaperHeader;